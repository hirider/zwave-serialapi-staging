.\"	Added by aes
.\"
.TH ZIPGATEWAY 1 2013-03-20 "Linux" "SERVICES"
.SH NAME
zipgateway \- the Z-Wave to IP translator
.SH SYNOPSIS
.B zipgateway \- [-f log] [-s /dev/ttyXXX ] [-c cfgfile] [-t tunfile] [-p provisioning_list_cfg] [-w provisioning_list_store] [-d database_file]
.SH DESCRIPTION
The Z/IP Gateway is an application which allows internet clients to contact and control nodes in a Z-Wave network. Through the Z/IP Gateway each node on the Z-Wave network behaves as an IP client on the network.

The Z/IP Gateway handles IPv4 or IPv6 communication destined for itself and on behalf of all nodes in the Z-Wave network.
On boot the Z/IP Gateway creates a TAP interface that is used to send and receive IP packets. The Z/IP Gateway secures communication over the TAP interface by using DTLS 1.0 on UDP port 41230.

The Z/IP Gateway has its own IPv4/IPv6 stack. IPv6 addresses are assigned according to the settings in the configuration file. Optionally the Z/IP Gateway can choose IPv6 addresses on its own.

Provided there is an IPv4 DHCP server on the network, the Z/IP Gateway requests IPv4 addresses for itself and for the nodes in the Z-Wave network.
Since the IPv4 addresses are acquired via DHCP on the LAN interface, they are all in the same subnet. So in general, there is no need for setting up IPv4 routes.

If no DHCP service is available IPv6 addresses may be used. IPv6 addresses are assigned in a separate subnet called the PAN (Personal Area Network) or HAN (Home area Network). This means that an IPv6 route must be setup in order for clients to reach the PAN. This is achieved using the \fI/etc/zipgateway.tun\fR script. To ease the routing the Z/IP Gateway will send out RFC4191 router announcements. Clients who support RFC4191 will be able to communicate with the PAN nodes via IPv6 without special routes. 

Optionally the Z/IP Gateway may be configured to connect to a "portal". The portal connection is a IPv4 TLS tunnel, which transports IPv6 packages. The Z/IP Gateway may be remotely configured through the portal. The portal pushed configuration overrides local configuration parameters.

For a full description see the Z/IP SDK.

.SH OPTIONS
The command line options will override the options in the configuration file.
.TP
\fB\-f logfile\fR
If this option is set, all communication between the Z-Wave module and the Z/IP Gateway application is logged into the logfile. Default behavior is no logging.
.TP
\fB\-w /etc/provisioning_list_store\fR
The Z/IP Gateway needs a file to store learned Smart Start provisioning data. This file should be located on a writable non-volatile partition. The provisioning list store file will be generated if it does not exist.
Defaults to
.I /etc/provisioning_list_store.dat
.TP
\fB\-s /dev/ttyXXX\fR
The serial port to which the Z-Wave serial API is connected. The Serial API connected should be of the type "Bridge Library".
There is no default, the serial port must be set either in the cfgfile or on the command line.
.TP
\fB\-c cfgfile\fR
The configuration file read by the application
Defaults to
.I /usr/local/etc/zipgateway.cfg
.TP
\fB\-p provisioning_list_cfg\fR
The Smart Start provisioning list initial configuration file.  This file is an initialization file, it will only be read if the provisioning list store file does not exist.
Defaults to
.I /usr/local/etc/zipgateway_provisioning_list.cfg
.TP
\fB\-t tunfile\fR
Location of the tunnel setup script
Defaults to
.I /usr/local/etc/zipgateway.tun

\fB\-d database_file\fR
The Z/IP Gateway needs a file to store learned network data. This file should be located on a writable non-volatile partition. The database file will be generated if it does not exist. 

Defaults to
.I /var/lib/zipgateway/zipgateway.db

.SH FILES

.TP
.I provisioning_list_store.dat
Provisioning list storage file, generated by the Z/IP Gateway

.TP
.I zipgateway.cfg
Configuration file, see the section below.

.TP
.I zipgateway.db
Database file used by gateway for persisted network information.

.TP
.I zipgateway_provisioning_list.cfg
Initialization file for the provisioning configuration.

.TP
.I zipgateway.tun
Script which is run when the TAP interface of the Z/IP Gateway comes up, and when the TAP interface goes down. The script is called with the keywords "up" and "down" when the interface status changes. Three environment variables are defined when the script is executed.

.B TUNDEV
The device name of the tunnel device.

.B LANIP
The IPv6 address of the Z/IP Gateway's LAN interface.

.B HANPREFIX
The Ipv6 prefix of the Z-Wave networks. This is the address range in which the Z-Wave nodes are assigend IPv6 addresses.

The environment variables may be used to configure routes on the host and to bridge the TAP interface together with other network interfaces, and to setup proper routes to the PAN.
This script also configures wireless if the interface on which Z/IP Gateway is listening for Z/IP client requests and DHCP leases is wireless interface. Script configures various daemons to enable wireless Z/IP Gateway.

.TP
.I zipgateway_node_identify_generic.sh
This script implements a generic "Node Identify" function by printing the on/off indicator sequence to a log file. The script will spawn itself into a background process that will control the blink sequence and to achieve this, this script takes three arguments as input in the following orders.

.B on_time_ms
ON duration (in milliseconds) for a single blink cycle. If on_time_ms is zero the indicator will be turned off and the background process will terminate immediately.

.B off_time_ms
OFF duration (in milliseconds) for a single blink cycle.

.B num_cycles
Number of blink cycles. The background script will terminate when the specified number of cycles have completed. If num_cycles is zero the background script will run bg_blinker "forever" or until killed.

.TP
.I zipgateway_node_identify_rpi3b+_led.sh
Script which is run to blink the LED on Raspberry Pi 3B+ for identifying the device. This script takes the arguments in the same way as zipgateway_node_identify_generic.sh. Please see the description of zipgateway_node_identify_generic.sh for more details.

.TP
.I /tmp/zgw.file
Backup communication file. Upon receiving a SIGUSR1 signal, the gateway will read this file and start a backup. For details see the zgw_backup.sh script.


.SH CONFIGURATION FILE
.TP
The zipgateway configuration file is used to customize the Z/IP Gateway behavior. Entries in the configuration file is written in a simple key=value format. The = sign is used as a delimiter, everything to the left of the = is a key and everything on the right of the = is the value. The default location of the configuration file is /usr/local/etc/zipgateway.cfg

.TP
.B ZipSerialAPIPortName
Serial port device name. The connected serial API should the of the type "Static Controller"

.TP
.B ZipUnsolicitedDestinationIp6
An IPv6 address to send unsolicited commands to. Unsolicited commands are Z-Wave command classes which are 
not handled by the Z/IP Gateway. This option makes it possible to extend the functionality of the Z/IP Gateway, 
with a foreign back end program. The unsolicited destination MUST honer the AGI functionality described in the 
Z-Wave+ specification for a CSC. Then the Z/IP Gateway is inclusion controller the unsolicited destination must 
support "Device Reset Locally" and association. When the Z/IP Gateway is SIS it the host must implement Lifeline setup
when adding new nodes. 

.TP
.B ZipUnsolicitedDestinationPort
Destination UDP port to use when sending unsolicited commands.
Default: 41230

.TP
.B ZipUnsolicitedDestination2Ip6
A secondary unsolicited destination. See ZipUnsolicitedDestinationIp6.

.TP
.B ZipUnsolicitedDestination2Port
A secondary unsolicited destination port. See ZipUnsolicitedDestinationPort.
Default: 41231

.TP
.B SerialLog
Log file for serial communication. Used for debugging. If this option is not set the no logging is done.

.TP
.B ZipCaCert
CA certificate of the portal provider.
Default: /usr/local/etc/Portal.ca_x509.pem

.TP
.B ZipCert
Z/IP Gateway public certificate.
Default: /usr/local/etc/ZIPR.x509_1024.pem 

.TP
.B ZipPrivKey
Z/IP Gateway private key.
Default: /usr/local/etc/ZIPR.key_1024.pem 

.TP
.B ZipGwDatabase
Location of database file. The database file must be stored in a non-volatile location 

.TP
.B TunScript
Location of the tun script.
Default: /usr/local/etc/zipgateway.tun

.TP
.B PVSStorageFile
The storage file for Smart Start provisioning data. This file should be located on a writable non-volatile partition.  The file will be generated if it does not exist.
Default: /etc/provisioning_list_store.dat

.TP
.B ProvisioningConfigFile
The Smart Start provisioning list initial configuration file.  This file is an initialization file, it will only be read if the provisioning list store file does not exist.
Default: /usr/local/etc/zipgateway_provisioning_list.cfg

.TP
.B ZipPanIp6
IPv6 prefix of the Z-Wave network. All Z-Wave nodes will be assigned an IPv6 address in this prefix. The host system should make sure to establish a route to this prefix via the ZipLanIp6. The default value is the 0::0 address, which means that the Z/IP Gateway will auto create a ULA prefix for the Z-Wave network.

.TP
.B ZipLanIp6
The IPv6 address of the Z/IP Gateway. This is LAN IP6 address of the Z/IP Gateway. This is the address which should be used when communicating with the Z/IP Gateway. This address should also be the target address of the route to the Z-Wave network. If this address is the 0::0 address the Z/IP Gateway will auto-generate a ULA address.

.TP
.B ZipLanGw6
The IPv6 default gateway which the Z/IP Gateway will use, when sending outside the LAN or PAN.

.TP
.B ZipPortal
IPv4 address of the gateway portal. The portal is a sort of a VPN host which transports IPv6 packages inside a TLS encrypted TCP tunnel. If not set the Z/IP Gateway runs without a portal.

.TP
.B ZipPortalPort
TCP port to use when connecting to a remote portal.
Default: 44123

.TP
.B ZipTunPrefix
The prefix of the network on the other side of the tunnel. The Z/IP Gateway will send all packages with destination within this prefix through the tunnel.

.TP
.B ZipTunIp6PrefixLength
The length of the tunnel prefix.
Default: 128 

.TP
.B ZipManufacturerID
Id to set in the version report.
Default: 0

.TP
.B ZipHardwareVersion
Hardware version to set in the version report.
Default: 1

.TP
.B ZipProductID
Id to set in the version report.
Default: 1

.TP
.B ZipProductType
Id to set in the version report.
Default: 1

.TP
.B ZipMBPort
Destination port for Mailbox proxy.
Default: 41230 

.TP
.B ZipMBDestinationIp6 
IP of Mailbox proxy service.
Default: None

.TP
.B ZipMBMode
Mode of operation of Mailbox proxy

.nr step 0 1
Values:

.IP \n[step] 3
Disable the Mailbox
.IP \n+[step]
Use the Z/IP Gateway's own Mailbox functionality
.IP \n+[step]
Use a Mailbox proxy service to store Mailbox messages

Default: 1

.TP
.B ZipPSK 
Pre shared key used in DTLS connection.
Default: None 

.TP
.B ExtraClasses
A space separated set of command classes the Z/IP Gateway should present in its node info frame. Command class
numbers must be given in decimal, or in hex preceding 0x, ie. 0x65.
Version command class get frames with one of these command classes will be forwarded to the unsolicited destination.

.TP
.B ZipNodeIdentifyScript
A script to be called to identify the device when using Indicator Command Class. For a full description see the Z-Wave Management Command Class Specification.
Two example scripts are provided to highlight this feature, /usr/local/etc/zipgateway_node_identify_generic.sh for generic usage and /usr/local/etc/zipgateway_node_identify_rpi3b+_led.sh for blinking on Raspberry Pi 3B+.

.TP
.B ZWRFRegion
A RF region to be used for Z/IP Gateway to set the Z-Wave 700. The region
must be given in decimal, or in hex preceding 0x, ie. 0x02. Note that this field
is only available for Z-Wave 700.

The RF region s ALSO used for setting the default Listen Before Talk Threshold 
for Z/IP Gateway on Z-Wave 500 and 700 series chip. The threshold value set, 
will be a default value unless overridded by ZWLBT setting. 

Valid RF region values:
.IP \[bu] 2
Region EU                    0x00
.IP \[bu]
Region US                    0x01
.IP \[bu]
Region Australia/New Zealand 0x02
.IP \[bu]
Region Hong Kong             0x03
.IP \[bu]
Region Malaysia              0x04
.IP \[bu]
Region India                 0x05
.IP \[bu]
Region Israel                0x06
.IP \[bu]
Region Russia                0x07
.IP \[bu]
Region China                 0x08
.IP \[bu]
Region US_LR                 0x09
.IP \[bu]
Region Japan                 0x20
.IP \[bu]
Region Korea                 0x21

.TP
.B NormalTxPowerLevel
The power level used when transmitting frames at normal power.
The power level is in deci dBm. E.g. 1dBm output power will be 10 in
NormalTxPower and -2dBm will be -20 in NormalTxPower. Note that this field is
only available for Z-Wave 700.

.TP
.B Measured0dBmPower
The output power measured from the antenna when NormalTxPower is set to 0dBm.
The power level is in deci dBm. E.g. 1dBm output power will be 10 in
Measured0dBmPower and -2dBm will be -20 in Measured0dBmPower. Note that this
field is only available for Z-Wave 700.

.TP
.B ZipDeviceID 
Hex encoded byte stream of ZIP Gateway device id. (Default: MAC address of ZIP Gateway)

.TP
.B ZWLBT
Set the Lsten Before Talk Threshold anytime Z/IP Gateway resets the Z-Wave chip 
The threshold controlles at what RSSI level a Z-Wave node will refuse to 
transmit because of noise.

The appropriate value range goes from 34(decimal) to 78(decimal) and each
threshold step corresponds to a 1.5dB input power step. For instance, if a SAW 
filter with an insertion loss of 3dB is inserted between the antenna 
feed-point and the chip on a JP product, the threshold value should be set to 
48(decimal) .

See "4.3.3.11 ZW_SetListenBeforeTalkThreshold" section in 
Z-Wave 500/700 Series Appl. Programmers Guide for more information

NOTE: You should set ZWRFRegion to the frequency used for Z-wave 500 series
to set LBT.

Default: 64 decimal (50 decimal for JP Frequency)
Valid Range: 34 decimal to 78 decimal

.SH SEE ALSO
.BR brctl (8),
.BR ip (8)
.SH AUTHORS
Silicon Labs
